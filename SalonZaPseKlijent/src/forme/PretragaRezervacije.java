/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.OpstiDomenskiObjekat;
import domen.Rezervacija;
import domen.Zaposleni;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import konstante.Operacije;
import modeli.ModelTabeleRezervacije;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author X
 */
public class PretragaRezervacije extends javax.swing.JDialog {

    Zaposleni ulogovani;

    public void setUlogovani(Zaposleni ulogovani) {
        this.ulogovani = ulogovani;
    }

    public Zaposleni getUlogovani() {
        return ulogovani;
    }
    
    /**
     * Creates new form PretragaRezervacije
     */
    public PretragaRezervacije(java.awt.Frame parent, boolean modal, Zaposleni ulogovani) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Salon za sisanje pasa");
        tblRezervacije.setModel(new ModelTabeleRezervacije());
        this.ulogovani = ulogovani;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDatumPretrazi = new javax.swing.JFormattedTextField();
        btnPretrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRezervacije = new javax.swing.JTable();
        btnRefresujRezervacije = new javax.swing.JButton();
        btnIzmeniRezervaciju = new javax.swing.JButton();
        btnObrisiRezervaciju = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        btnPrikaziRezervacije = new javax.swing.JButton();
        btnPrikazCeleRezervacije = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pretraga", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Unesite datum:");

        txtDatumPretrazi.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        btnPretrazi.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnPretrazi.setForeground(new java.awt.Color(204, 0, 0));
        btnPretrazi.setText("Pretrazi");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        tblRezervacije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRezervacije);

        btnRefresujRezervacije.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnRefresujRezervacije.setText("Refresuj");
        btnRefresujRezervacije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresujRezervacijeActionPerformed(evt);
            }
        });

        btnIzmeniRezervaciju.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnIzmeniRezervaciju.setForeground(new java.awt.Color(204, 0, 0));
        btnIzmeniRezervaciju.setText("Izmeni rezervaciju");
        btnIzmeniRezervaciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniRezervacijuActionPerformed(evt);
            }
        });

        btnObrisiRezervaciju.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnObrisiRezervaciju.setForeground(new java.awt.Color(204, 0, 0));
        btnObrisiRezervaciju.setText("Obrisi rezervaciju");
        btnObrisiRezervaciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiRezervacijuActionPerformed(evt);
            }
        });

        btnOtkazi.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnPrikaziRezervacije.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnPrikaziRezervacije.setText("Prikazi rezervacije");
        btnPrikaziRezervacije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziRezervacijeActionPerformed(evt);
            }
        });

        btnPrikazCeleRezervacije.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnPrikazCeleRezervacije.setText("Prikazi celu rezervaciju");
        btnPrikazCeleRezervacije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikazCeleRezervacijeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDatumPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnPrikaziRezervacije)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrikazCeleRezervacije)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRefresujRezervacije, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(btnPretrazi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnIzmeniRezervaciju)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnObrisiRezervaciju, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDatumPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnPretrazi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresujRezervacije)
                    .addComponent(btnPrikaziRezervacije)
                    .addComponent(btnPrikazCeleRezervacije))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeniRezervaciju, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObrisiRezervaciju, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrikaziRezervacijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziRezervacijeActionPerformed
        popuniTabeluRezervacija();
    }//GEN-LAST:event_btnPrikaziRezervacijeActionPerformed

    private void btnPrikazCeleRezervacijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikazCeleRezervacijeActionPerformed
        int red = tblRezervacije.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(this, "Izaberite rezervaciju koju zelite prikazati.");
        }else{
            ModelTabeleRezervacije mt = (ModelTabeleRezervacije) tblRezervacije.getModel();
            JOptionPane.showMessageDialog(this, mt.getLista().get(red));
        }
    }//GEN-LAST:event_btnPrikazCeleRezervacijeActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Date datum = sdf.parse(txtDatumPretrazi.getText());
            java.sql.Timestamp sqlDatum = new java.sql.Timestamp(datum.getTime());
            Rezervacija r = new Rezervacija();
            r.setZaposleni(ulogovani);
            r.setDatum(sqlDatum);
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.NADJI_REZERVACIJE);
            kz.setParametar(r);
            Komunikacija.getInstance().posaljiZahtev(kz);
            ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();
            List<OpstiDomenskiObjekat> listaRezervacija = (List<OpstiDomenskiObjekat>) so.getOdgovor();
            ModelTabeleRezervacije mt = (ModelTabeleRezervacije) tblRezervacije.getModel();
            mt.dodajRezervacije(listaRezervacija);
            
        } catch (ParseException ex) {
            Logger.getLogger(PretragaRezervacije.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Greska kod datum pretrazi");
        }
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnIzmeniRezervacijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniRezervacijuActionPerformed
        int red = tblRezervacije.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(this, "Izaberite rezervaciju koju zelite da izmenite!");
        }else{
            ModelTabeleRezervacije mt = (ModelTabeleRezervacije) tblRezervacije.getModel();
            Rezervacija r = (Rezervacija) mt.getLista().get(red);
            DodajRezervaciju dr = new DodajRezervaciju(r);
            dr.setVisible(true);
            //this.setVisible(false);
        }
    }//GEN-LAST:event_btnIzmeniRezervacijuActionPerformed

    private void btnObrisiRezervacijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiRezervacijuActionPerformed
        int red = tblRezervacije.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(this, "Izaberite rezervaciju koju zelite da obrisete!");
        }else{
            ModelTabeleRezervacije mt = (ModelTabeleRezervacije) tblRezervacije.getModel();
            Rezervacija r = (Rezervacija) mt.getLista().get(red);
            int potvrda = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite obrisati izabranu rezervaciju?");
            if(potvrda == 0){
                KlijentskiZahtev kz = new KlijentskiZahtev();
                kz.setOperacija(Operacije.OBRISI_REZERVACIJU);
                kz.setParametar(r);
                Komunikacija.getInstance().posaljiZahtev(kz);
                ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();
                Rezervacija obrisanaRezervacija = (Rezervacija) so.getOdgovor();
                if(obrisanaRezervacija != null){
                    JOptionPane.showMessageDialog(this, "Rezervacija je uspesno izbrisana iz sistema.");
                }else{
                    JOptionPane.showMessageDialog(this, "Greska prilikom brisanja rezervacijes. Pokusajte ponovo.");
                }
            }
        }
    }//GEN-LAST:event_btnObrisiRezervacijuActionPerformed

    private void btnRefresujRezervacijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresujRezervacijeActionPerformed
        popuniTabeluRezervacija();
    }//GEN-LAST:event_btnRefresujRezervacijeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeniRezervaciju;
    private javax.swing.JButton btnObrisiRezervaciju;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnPrikazCeleRezervacije;
    private javax.swing.JButton btnPrikaziRezervacije;
    private javax.swing.JButton btnRefresujRezervacije;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRezervacije;
    private javax.swing.JFormattedTextField txtDatumPretrazi;
    // End of variables declaration//GEN-END:variables

    private void popuniTabeluRezervacija() {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_REZERVACIJE);
        Rezervacija r = new Rezervacija();
        r.setZaposleni(ulogovani);
        System.out.println(ulogovani.toString() + ulogovani.getZaposleniid());
        kz.setParametar(r);
        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();
        List<OpstiDomenskiObjekat> listaRezervacija = (List<OpstiDomenskiObjekat>) so.getOdgovor();
        ModelTabeleRezervacije mt = (ModelTabeleRezervacije) tblRezervacije.getModel();
        mt.dodajListuLjubimaca(listaRezervacija);
    }
}
